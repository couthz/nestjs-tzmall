/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/order/dtos/buynow-sku.dto"]: await import("./modules/order/dtos/buynow-sku.dto"),
        ["./modules/order/dtos/checkout-sku.dto"]: await import("./modules/order/dtos/checkout-sku.dto"),
        ["./modules/user/entities/user-addr.entity"]: await import("./modules/user/entities/user-addr.entity"),
        ["./modules/order/entities/order.entity"]: await import("./modules/order/entities/order.entity"),
        ["./modules/order/enums/order.enum"]: await import("./modules/order/enums/order.enum"),
        ["./modules/order/entities/order-addr.entity"]: await import("./modules/order/entities/order-addr.entity"),
        ["./modules/core/constants/enums"]: await import("./modules/core/constants/enums"),
        ["./modules/order/entities/order-item.entity"]: await import("./modules/order/entities/order-item.entity"),
        ["./modules/prod/entities/prod.entity"]: await import("./modules/prod/entities/prod.entity"),
        ["./modules/shopcart/entities/shopcart-item.entity"]: await import("./modules/shopcart/entities/shopcart-item.entity"),
        ["./modules/prod/entities/prod-category.entity"]: await import("./modules/prod/entities/prod-category.entity"),
        ["./modules/prod/entities/prod-cate-attr.entity"]: await import("./modules/prod/entities/prod-cate-attr.entity"),
        ["./modules/prod/enums/prod.enum"]: await import("./modules/prod/enums/prod.enum"),
        ["./modules/prod/entities/prod-attrvalue.entity"]: await import("./modules/prod/entities/prod-attrvalue.entity"),
        ["./modules/prod/entities/sku.entity"]: await import("./modules/prod/entities/sku.entity"),
        ["./modules/restful/dtos/paginate.dto"]: await import("./modules/restful/dtos/paginate.dto"),
        ["./modules/order/dtos/order-addr.dto"]: await import("./modules/order/dtos/order-addr.dto"),
        ["./modules/order/entities/order-delivery.entity"]: await import("./modules/order/entities/order-delivery.entity"),
        ["./modules/prod/dtos/prod-sku-select.dto"]: await import("./modules/prod/dtos/prod-sku-select.dto"),
        ["./modules/database/constants"]: await import("./modules/database/constants"),
        ["./modules/prod/dtos/prod-cate-desc.dto"]: await import("./modules/prod/dtos/prod-cate-desc.dto"),
        ["./modules/prod/dtos/update-product/attr-value-field-entry.dto"]: await import("./modules/prod/dtos/update-product/attr-value-field-entry.dto"),
        ["./modules/prod/dtos/update-product/attr-list-entry.dto"]: await import("./modules/prod/dtos/update-product/attr-list-entry.dto"),
        ["./modules/prod/dtos/update-product/sku-entry.dto"]: await import("./modules/prod/dtos/update-product/sku-entry.dto"),
        ["./modules/area/entities/area.entity"]: await import("./modules/area/entities/area.entity"),
        ["./modules/order/dtos/order-detail.dto"]: await import("./modules/order/dtos/order-detail.dto"),
        ["./modules/order/dtos/checkout.dto"]: await import("./modules/order/dtos/checkout.dto"),
        ["./modules/order/dtos/pay-order-info.dto"]: await import("./modules/order/dtos/pay-order-info.dto"),
        ["./modules/order/entities/seller-addr.entity"]: await import("./modules/order/entities/seller-addr.entity"),
        ["./modules/prod/dtos/prod-detail.dto"]: await import("./modules/prod/dtos/prod-detail.dto"),
        ["./modules/prod/dtos/prod-detail-with-attr.dto"]: await import("./modules/prod/dtos/prod-detail-with-attr.dto"),
        ["./modules/shopcart/dtos/get-shopcart.dto"]: await import("./modules/shopcart/dtos/get-shopcart.dto"),
        ["./modules/user/dtos/token-info.dto"]: await import("./modules/user/dtos/token-info.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/area/entities/area.entity"), { "Area": { areaId: { required: true, type: () => String }, areaName: { required: true, type: () => String }, parentId: { required: true, type: () => String }, level: { required: true, type: () => Number } } }], [import("./modules/area/dtos/get-area.dto"), { "GetAreaDTO": { provinceId: { required: true, type: () => String }, cityId: { required: true, type: () => String } } }], [import("./modules/order/dtos/buynow-sku.dto"), { "BuynowSkuDTO": { prodId: { required: true, type: () => String }, skuId: { required: true, type: () => String }, itemCount: { required: true, type: () => Number } } }], [import("./modules/order/dtos/get-checkout.dto"), { "GetCheckOutDTO": { addrId: { required: true, type: () => String } } }], [import("./modules/order/dtos/buynow-get-checkout.dto"), { "BuynowGetCheckOutDTO": { buynowSkuDTO: { required: true, type: () => t["./modules/order/dtos/buynow-sku.dto"].BuynowSkuDTO } } }], [import("./modules/user/entities/user-addr.entity"), { "UserAddr": { addrId: { required: true, type: () => String }, userId: { required: true, type: () => String }, receiver: { required: true, type: () => String, nullable: true }, provinceId: { required: true, type: () => String, nullable: true }, province: { required: true, type: () => String, nullable: true }, city: { required: true, type: () => String, nullable: true }, cityId: { required: true, type: () => String, nullable: true }, area: { required: true, type: () => String, nullable: true }, areaId: { required: true, type: () => String, nullable: true }, postCode: { required: true, type: () => String, nullable: true }, addr: { required: true, type: () => String, nullable: true }, mobile: { required: true, type: () => String, nullable: true }, status: { required: true, type: () => Number }, commonAddr: { required: true, type: () => Number }, createTime: { required: true, type: () => Date }, version: { required: true, type: () => Number }, updateTime: { required: true, type: () => Date } } }], [import("./modules/order/dtos/checkout-sku.dto"), { "CheckOutSkuDTO": { shopcartItemId: { required: true, type: () => String }, prodId: { required: true, type: () => String }, skuId: { required: true, type: () => String }, prodName: { required: true, type: () => String }, itemCount: { required: true, type: () => Number }, skuName: { required: true, type: () => String }, pic: { required: true, type: () => String }, price: { required: true, type: () => String }, totalPay: { required: true, type: () => String }, addShopcartDate: { required: true, type: () => Date } } }], [import("./modules/order/dtos/checkout.dto"), { "CheckOutDTO": { totalPay: { required: true, type: () => String }, totalCount: { required: true, type: () => Number }, checkOutSkuDTOs: { required: true, type: () => [t["./modules/order/dtos/checkout-sku.dto"].CheckOutSkuDTO] }, buyerRemark: { required: true, type: () => String }, userAddr: { required: true, type: () => t["./modules/user/entities/user-addr.entity"].UserAddr }, transfee: { required: true, type: () => String } } }], [import("./modules/order/dtos/shopcart-get-checkout.dto"), { "ShopcartGetCheckOutDTO": { shopcartItemIds: { required: true } } }], [import("./modules/order/entities/order-addr.entity"), { "OrderAddr": { orderAddrId: { required: true, type: () => String }, addrId: { required: true, type: () => String }, userId: { required: true, type: () => String }, receiver: { required: true, type: () => String, nullable: true }, provinceId: { required: true, type: () => String, nullable: true }, province: { required: true, type: () => String, nullable: true }, areaId: { required: true, type: () => String, nullable: true }, area: { required: true, type: () => String, nullable: true }, cityId: { required: true, type: () => String, nullable: true }, city: { required: true, type: () => String, nullable: true }, addr: { required: true, type: () => String, nullable: true }, postCode: { required: true, type: () => String, nullable: true }, mobile: { required: true, type: () => String, nullable: true }, createTime: { required: true, type: () => Date }, version: { required: true, type: () => Number }, order: { required: true, type: () => t["./modules/order/entities/order.entity"].Order } } }], [import("./modules/order/entities/order.entity"), { "Order": { orderId: { required: true, type: () => String }, orderNumber: { required: true, type: () => String }, totalCount: { required: true, type: () => Number, nullable: true }, userId: { required: true, type: () => String }, totalPay: { required: true, type: () => String }, actualTotalPay: { required: true, type: () => String }, payType: { required: true, enum: t["./modules/order/enums/order.enum"].PayType }, buyerRemark: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/order/enums/order.enum"].OrderStatus }, transfee: { required: true, type: () => String, nullable: true }, orderAddrId: { required: true, type: () => String, nullable: true }, orderAddr: { required: true, type: () => t["./modules/order/entities/order-addr.entity"].OrderAddr }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date, nullable: true }, payTime: { required: true, type: () => Date, nullable: true }, dvyTime: { required: true, type: () => Date, nullable: true }, finallyTime: { required: true, type: () => Date, nullable: true }, cancelTime: { required: true, type: () => Date, nullable: true }, isPayed: { required: true, enum: t["./modules/order/enums/order.enum"].PayedStatus }, deleteStatus: { required: true, enum: t["./modules/core/constants/enums"].DeleteStatus }, reduceAmount: { required: true, type: () => String }, closeType: { required: true, enum: t["./modules/order/enums/order.enum"].OrderCloseType }, prodName: { required: true, type: () => String, nullable: true }, changePrice: { required: true, type: () => String }, userMobile: { required: true, type: () => String, nullable: true }, userWechat: { required: true, type: () => String, nullable: true }, orderItems: { required: true, type: () => [t["./modules/order/entities/order-item.entity"].OrderItem] } } }], [import("./modules/order/entities/order-item.entity"), { "OrderItem": { orderItemId: { required: true, type: () => String }, order: { required: true, type: () => t["./modules/order/entities/order.entity"].Order }, orderId: { required: true, type: () => String }, orderNumber: { required: true, type: () => String }, prodId: { required: true, type: () => String }, skuId: { required: true, type: () => String }, itemCount: { required: true, type: () => Number }, prodName: { required: true, type: () => String }, skuName: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String, nullable: true }, price: { required: true, type: () => String }, userId: { required: true, type: () => String }, totalPay: { required: true, type: () => String }, createTime: { required: true, type: () => Date }, commSts: { required: true, enum: t["./modules/order/enums/order.enum"].OrderItemCommentStatus }, addShopcartDate: { required: true, type: () => Date, nullable: true }, aftersaleStatus: { required: true, type: () => Number }, deliveryStatus: { required: true, enum: t["./modules/order/enums/order.enum"].OrderDeliveryStatus }, deliveryIds: { required: true, type: () => String } } }], [import("./modules/order/entities/order-payment.entity"), { "OrderPayment": { paymentId: { required: true, type: () => String }, payNo: { required: true, type: () => String, nullable: true }, transactionId: { required: true, type: () => String, nullable: true }, orderNumber: { required: true, type: () => String, nullable: true }, payType: { required: true, enum: t["./modules/order/enums/order.enum"].PayType }, payTypeName: { required: true, type: () => String, nullable: true }, actualTotalPay: { required: true, type: () => String, nullable: true }, isClearing: { required: true, type: () => Number, nullable: true }, userId: { required: true, type: () => String, nullable: true }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, clearingTime: { required: true, type: () => Date, nullable: true }, version: { required: true, type: () => Number, nullable: true }, payStatus: { required: true, enum: t["./modules/order/enums/order.enum"].PayedStatus }, initialPayTime: { required: true, type: () => Date, nullable: true }, frontendPayTime: { required: true, type: () => Date, nullable: true }, payTime: { required: true, type: () => Date, nullable: true }, payRawData: { required: true, type: () => String, nullable: true } } }], [import("./modules/order/entities/seller-addr.entity"), { "SellerAddr": { sellerAddrId: { required: true, type: () => String }, receiver: { required: true, type: () => String, nullable: true }, provinceId: { required: true, type: () => String, nullable: true }, province: { required: true, type: () => String, nullable: true }, areaId: { required: true, type: () => String, nullable: true }, area: { required: true, type: () => String, nullable: true }, cityId: { required: true, type: () => String, nullable: true }, city: { required: true, type: () => String, nullable: true }, addr: { required: true, type: () => String, nullable: true }, postCode: { required: true, type: () => String, nullable: true }, mobile: { required: true, type: () => String, nullable: true }, createTime: { required: true, type: () => Date }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus }, defaultConsignAddr: { required: true, type: () => Boolean }, defaultReturnAddr: { required: true, type: () => Boolean }, version: { required: true, type: () => Number } } }], [import("./modules/order/entities/order-delivery.entity"), { "OrderDelivery": { deliveryId: { required: true, type: () => String }, deliveryNumber: { required: true, type: () => String }, deliveryData: { required: true, type: () => String, nullable: true }, dvyFlowCode: { required: true, type: () => String }, deliveryState: { required: true, type: () => Number, nullable: true } } }], [import("./modules/order/dtos/order-addr.dto"), { "OrderAddrDTO": { orderAddrId: { required: true, type: () => String }, addrId: { required: true, type: () => String }, userId: { required: true, type: () => String }, receiver: { required: true, type: () => String, nullable: true }, provinceId: { required: true, type: () => String, nullable: true }, province: { required: true, type: () => String, nullable: true }, areaId: { required: true, type: () => String, nullable: true }, area: { required: true, type: () => String, nullable: true }, cityId: { required: true, type: () => String, nullable: true }, city: { required: true, type: () => String, nullable: true }, addr: { required: true, type: () => String, nullable: true }, postCode: { required: true, type: () => String, nullable: true }, mobile: { required: true, type: () => String, nullable: true } } }], [import("./modules/order/dtos/update-seller-addr.dto"), { "UpdateSellerAddr": { sellerAddrId: { required: true, type: () => String }, receiver: { required: true, type: () => String, nullable: true }, provinceId: { required: true, type: () => String, nullable: true }, province: { required: true, type: () => String, nullable: true }, areaId: { required: true, type: () => String, nullable: true }, area: { required: true, type: () => String, nullable: true }, cityId: { required: true, type: () => String, nullable: true }, city: { required: true, type: () => String, nullable: true }, addr: { required: true, type: () => String, nullable: true }, postCode: { required: true, type: () => String, nullable: true }, mobile: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus }, defaultConsignAddr: { required: true, type: () => Boolean }, defaultReturnAddr: { required: true, type: () => Boolean } } }], [import("./modules/order/dtos/order-delivery-result.dto"), { "OrderDeliveryResultDTO": { EBusinessID: { required: true, type: () => String }, OrderCode: { required: true, type: () => String }, ShipperCode: { required: true, type: () => String }, LogisticCode: { required: true, type: () => String }, Success: { required: true, type: () => Boolean }, State: { required: true, type: () => Number }, Reason: { required: true, type: () => String }, Traces: { required: true } } }], [import("./modules/user/entities/user.entity"), { "User": { userId: { required: true, type: () => String }, nickName: { required: true, type: () => String, nullable: true }, realName: { required: true, type: () => String, nullable: true }, userMail: { required: true, type: () => String, nullable: true }, loginPassword: { required: true, type: () => String, nullable: true }, payPassword: { required: true, type: () => String, nullable: true }, userMobile: { required: true, type: () => String, nullable: true }, modifyTime: { required: true, type: () => Date }, userRegtime: { required: true, type: () => Date }, userRegip: { required: true, type: () => String, nullable: true }, userLasttime: { required: true, type: () => Date, nullable: true }, userLastip: { required: true, type: () => String, nullable: true }, userMemo: { required: true, type: () => String, nullable: true }, sex: { required: true, type: () => String, nullable: true }, birthDate: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, status: { required: true, type: () => Number }, score: { required: true, type: () => Number, nullable: true }, openId: { required: true, type: () => String, nullable: true }, unionId: { required: true, type: () => String, nullable: true }, userWechat: { required: true, type: () => String, nullable: true } } }], [import("./modules/user/dtos/update-avatar-nickName.dto"), { "UpdateAvatarNickNameDTO": { avatarUrl: { required: true, type: () => String }, nickName: { required: true, type: () => String } } }], [import("./modules/user/dtos/update-user-addr.dto"), { "UpdateUserAddrDTO": { addrId: { required: true, type: () => String }, receiver: { required: true, type: () => String }, provinceId: { required: true, type: () => String }, province: { required: true, type: () => String }, city: { required: true, type: () => String }, cityId: { required: true, type: () => String }, area: { required: true, type: () => String }, areaId: { required: true, type: () => String }, postCode: { required: true, type: () => String }, addr: { required: true, type: () => String }, mobile: { required: true, type: () => String } } }], [import("./modules/shopcart/dtos/change-shopcart.dto"), { "ChangeShopcartDTO": { shopcartItemId: { required: true, type: () => String }, prodId: { required: true, type: () => String }, skuId: { required: true, type: () => String }, itemCount: { required: true, type: () => Number } } }], [import("./modules/prod/entities/prod-attrvalue.entity"), { "ProdAttrvalue": { attrValueId: { required: true, type: () => String }, attrId: { required: true, type: () => String, nullable: true }, attrName: { required: true, type: () => String, nullable: true }, attrValueName: { required: true, type: () => String, nullable: true }, prodId: { required: true, type: () => String }, prod: { required: true, type: () => t["./modules/prod/entities/prod.entity"].Prod }, pic: { required: true, type: () => String }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus } } }], [import("./modules/prod/entities/sku.entity"), { "Sku": { skuId: { required: true, type: () => String }, prod: { required: true, type: () => t["./modules/prod/entities/prod.entity"].Prod }, prodId: { required: true, type: () => String }, categoryId: { required: true, type: () => String }, oriPrice: { required: true, type: () => String, nullable: true }, price: { required: true, type: () => String, nullable: true }, stocks: { required: true, type: () => Number }, actualStocks: { required: true, type: () => Number, nullable: true }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, pic: { required: true, type: () => String, nullable: true }, skuName: { required: true, type: () => String, nullable: true }, prodName: { required: true, type: () => String, nullable: true }, version: { required: true, type: () => Number }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus }, isDelete: { required: true, nullable: true, enum: t["./modules/core/constants/enums"].DeleteStatus }, attr: { required: true, type: () => String }, shopcartItems: { required: true, type: () => [t["./modules/shopcart/entities/shopcart-item.entity"].ShopcartItem] } } }], [import("./modules/prod/entities/prod-cate-attr.entity"), { "ProdCateAttr": { attrId: { required: true, type: () => String }, categoryId: { required: true, type: () => String }, prodCategory: { required: true, type: () => t["./modules/prod/entities/prod-category.entity"].ProdCategory }, attrName: { required: true, type: () => String }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus }, isMainAttr: { required: true, type: () => Boolean } } }], [import("./modules/prod/entities/prod-category.entity"), { "ProdCategory": { categoryId: { required: true, type: () => String }, parentId: { required: true, type: () => String }, categoryName: { required: true, type: () => String }, icon: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String, nullable: true }, seq: { required: true, type: () => Number }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus }, recTime: { required: true, type: () => Date }, grade: { required: true, type: () => Number }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, deleteTime: { required: true, type: () => Date }, prods: { required: true, type: () => [t["./modules/prod/entities/prod.entity"].Prod] }, prodCateAttrs: { required: true, type: () => [t["./modules/prod/entities/prod-cate-attr.entity"].ProdCateAttr] } } }], [import("./modules/prod/entities/prod.entity"), { "Prod": { prodId: { required: true, type: () => String }, prodName: { required: true, type: () => String }, oriPrice: { required: true, type: () => String, nullable: true }, price: { required: true, type: () => String, nullable: true }, costPrice: { required: true, type: () => String, nullable: true }, brief: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String, nullable: true }, imgs: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/prod/enums/prod.enum"].ProdStatus }, categoryId: { required: true, type: () => String, nullable: true }, category: { required: true, type: () => t["./modules/prod/entities/prod-category.entity"].ProdCategory }, soldNum: { required: true, type: () => Number, nullable: true }, totalStocks: { required: true, type: () => Number, nullable: true }, returnNum: { required: true, type: () => Number, nullable: true }, deliveryTemplateId: { required: true, type: () => String, nullable: true }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, putawayTime: { required: true, type: () => Date, nullable: true }, version: { required: true, type: () => Number, nullable: true }, contentImg: { required: true, type: () => String, nullable: true }, prodAttrValues: { required: true, type: () => [t["./modules/prod/entities/prod-attrvalue.entity"].ProdAttrvalue] }, skus: { required: true, type: () => [t["./modules/prod/entities/sku.entity"].Sku] }, shopcartItems: { required: true, type: () => [t["./modules/shopcart/entities/shopcart-item.entity"].ShopcartItem] } } }], [import("./modules/prod/entities/prod-tag.entity"), { "ProdTag": { id: { required: true, type: () => String }, title: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/core/constants/enums"].CommonStatus }, isDefault: { required: true, type: () => Boolean, nullable: true }, prodCount: { required: true, type: () => String, nullable: true }, style: { required: true, type: () => Number, nullable: true }, seq: { required: true, type: () => Number, nullable: true }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, deleteTime: { required: true, type: () => Date }, prods: { required: true, type: () => [t["./modules/prod/entities/prod.entity"].Prod] } } }], [import("./modules/prod/entities/prod-comment.entity"), { "ProdComment": { prodCommId: { required: true, type: () => Number }, prodId: { required: true, type: () => Number }, orderItemId: { required: true, type: () => Number, nullable: true }, userId: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => String }, replyContent: { required: true, type: () => String }, recTime: { required: true, type: () => Date, nullable: true }, replyTime: { required: true, type: () => Date, nullable: true }, replySts: { required: true, type: () => Number }, postip: { required: true, type: () => String, nullable: true }, score: { required: true, type: () => Number }, usefulCounts: { required: true, type: () => Number }, pics: { required: true, type: () => String, nullable: true }, isAnonymous: { required: true, type: () => Number }, status: { required: true, type: () => Number, nullable: true }, evaluate: { required: true, type: () => Number, nullable: true }, nickName: { required: true, type: () => String }, prodAttrDesc: { required: true, type: () => String }, avatarUrl: { required: true, type: () => String } } }], [import("./modules/shopcart/entities/shopcart-item.entity"), { "ShopcartItem": { shopcartItemId: { required: true, type: () => String }, prod: { required: true, type: () => t["./modules/prod/entities/prod.entity"].Prod }, sku: { required: true, type: () => t["./modules/prod/entities/sku.entity"].Sku }, skuId: { required: true, type: () => String }, prodId: { required: true, type: () => String }, userId: { required: true, type: () => String }, itemCount: { required: true, type: () => Number }, addDate: { required: true, type: () => Date }, isChecked: { required: true, type: () => Boolean }, isValid: { required: true, type: () => Boolean } } }], [import("./modules/shopcart/dtos/change-item-checked.dto"), { "ChangeItemCheckedDTO": { shopcartItemIds: { required: true, type: () => [String] }, isChecked: { required: true, type: () => Boolean } } }], [import("./modules/prod/dtos/prod-cate-desc.dto"), { "ProdCategoryDescDTO": { categoryId: { required: true, type: () => String }, categoryName: { required: true, type: () => String } } }], [import("./modules/shopcart/dtos/get-shopcart.dto"), { "GetShopcartDTO": { shopcartItems: { required: true, type: () => [t["./modules/shopcart/entities/shopcart-item.entity"].ShopcartItem] }, totalPay: { required: true, type: () => String } } }], [import("./modules/order/dtos/get-order-page.dto"), { "GetOrderPageDTO": { status: { required: true, description: "\u8BA2\u5355\u72B6\u6001", enum: t["./modules/order/enums/order.enum"].OrderStatus } } }], [import("./modules/restful/dtos/paginate.dto"), { "PaginateDto": { current: { required: false, type: () => Number, description: "\u5F53\u524D\u9875", default: 1, minimum: 1 }, size: { required: false, type: () => Number, description: "\u6BCF\u9875\u6570\u636E\u91CF", default: 10, minimum: 1 } } }], [import("./modules/restful/dtos/request-body-api.dto"), { "RequestBodyAPIDTO": { page: { required: true, type: () => t["./modules/restful/dtos/paginate.dto"].PaginateDto }, params: { required: true } } }], [import("./modules/order/dtos/change-price.dto"), { "ChangePriceDTO": { orderId: { required: true, type: () => String }, transfee: { required: true, type: () => String }, changePrice: { required: true, type: () => String }, actualTotalPay: { required: true, type: () => String } } }], [import("./modules/order/dtos/sendout.dto"), { "SendoutDTO": { orderId: { required: true, type: () => String }, selectedOrderItems: { required: true, type: () => [String] }, flowNumbers: { required: true, type: () => [String] }, orderAddrDTO: { required: true, type: () => t["./modules/order/dtos/order-addr.dto"].OrderAddrDTO } } }], [import("./modules/order/dtos/order-submmit.dto"), { "OrderSubmmitDTO": { remarks: { required: true, type: () => String } } }], [import("./modules/order/dtos/order-detail.dto"), { "OrderDetailDTO": { order: { required: true, type: () => t["./modules/order/entities/order.entity"].Order }, orderDeliveryInfos: { required: true, type: () => [t["./modules/order/entities/order-delivery.entity"].OrderDelivery] } } }], [import("./modules/order/dtos/order-pay.dto"), { "OrderPayDTO": { orderNumber: { required: true, type: () => String } } }], [import("./modules/order/dtos/pay-order-info.dto"), { "PayOrderInfoDto": { timeStamp: { required: true, type: () => Number }, nonceStr: { required: true, type: () => String }, package: { required: true, type: () => String }, signType: { required: true, type: () => String }, paySign: { required: true, type: () => String } } }], [import("./modules/order/dtos/pay-notify.dto"), { "PayNotifyDTO": { appid: { required: true, type: () => String, description: "\u5E94\u7528AppID" }, mchid: { required: true, type: () => String, description: "\u5546\u6237\u53F7" }, out_trade_no: { required: true, type: () => String, description: "\u5546\u6237\u8BA2\u5355\u53F7" }, transaction_id: { required: true, type: () => String, description: "\u5FAE\u4FE1\u652F\u4ED8\u8BA2\u5355\u53F7" }, trade_type: { required: true, type: () => String, description: "\u4EA4\u6613\u7C7B\u578B, \u679A\u4E3E\u503C" }, trade_state: { required: true, type: () => String, description: "\u4EA4\u6613\u72B6\u6001 \u679A\u4E3E\u503C" }, trade_state_desc: { required: true, type: () => String, description: "\u4EA4\u6613\u72B6\u6001\u63CF\u8FF0" }, bank_type: { required: true, type: () => String, description: "\u94F6\u884C\u7C7B\u578B" }, attach: { required: true, type: () => String, description: "\u9644\u52A0\u6570\u636E string" }, success_time: { required: true, type: () => String, description: "\u652F\u4ED8\u5B8C\u6210\u65F6\u95F4" }, payer: { required: true, type: () => ({ openid: { required: true, type: () => String } }), description: "\u652F\u4ED8\u8005\u4FE1\u606F" }, amount: { required: true, type: () => ({ total: { required: true, type: () => Number }, payer_total: { required: true, type: () => Number }, currency: { required: true, type: () => String }, payer_currency: { required: true, type: () => String } }), description: "\u91D1\u989D" }, scene_info: { required: true, type: () => ({ device_id: { required: true, type: () => String } }) }, promotion_detail: { required: true, description: "\u4F18\u60E0\u529F\u80FD" } } }], [import("./modules/user/dtos/wx-authentication.dto"), { "WxAuthenticationDTO": { code: { required: true, type: () => String } } }], [import("./modules/user/dtos/wx-session.dto"), { "WxSessionDTO": { openid: { required: true, type: () => String }, session_key: { required: true, type: () => String } } }], [import("./modules/user/dtos/token-info.dto"), { "TokenInfoDTO": { accessToken: { required: true, type: () => String }, expiresIn: { required: true, type: () => Number }, nickName: { required: true, type: () => String }, avatarUrl: { required: true, type: () => String }, userMobile: { required: true, type: () => String } } }], [import("./modules/user/dtos/save-user-addr.dto"), { "SaveUserAddrDTO": { receiver: { required: true, type: () => String }, provinceId: { required: true, type: () => String }, province: { required: true, type: () => String }, city: { required: true, type: () => String }, cityId: { required: true, type: () => String }, area: { required: true, type: () => String }, areaId: { required: true, type: () => String }, postCode: { required: true, type: () => String }, addr: { required: true, type: () => String }, mobile: { required: true, type: () => String } } }], [import("./modules/prod/dtos/prod-sku-select.dto"), { "ProdSkuSelectDTO": { attrSkuMap: { required: true }, attrvalueMap: { required: true } } }], [import("./modules/prod/dtos/prod-detail.dto"), { "ProdDetailDTO": { prodId: { required: true, type: () => String }, prodName: { required: true, type: () => String }, oriPrice: { required: true, type: () => String, nullable: true }, price: { required: true, type: () => String, nullable: true }, costPrice: { required: true, type: () => String, nullable: true }, brief: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String, nullable: true }, imgs: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/prod/enums/prod.enum"].ProdStatus }, categoryId: { required: true, type: () => String, nullable: true }, soldNum: { required: true, type: () => Number, nullable: true }, totalStocks: { required: true, type: () => Number, nullable: true }, returnNum: { required: true, type: () => Number, nullable: true }, deliveryTemplateId: { required: true, type: () => String, nullable: true }, contentImg: { required: true, type: () => String, nullable: true }, skus: { required: true, type: () => [t["./modules/prod/entities/sku.entity"].Sku] }, prodSkuSelectDTO: { required: true, type: () => t["./modules/prod/dtos/prod-sku-select.dto"].ProdSkuSelectDTO } } }], [import("./modules/restful/dtos/delete.dto"), { "DeleteDto": { ids: { required: true, type: () => [String], description: "\u5F85\u5220\u9664\u6570\u636E\u7684ID\u5217\u8868" } } }], [import("./modules/restful/dtos/delete-with-trash.dto"), { "DeleteWithTrashDto": { trash: { required: false, type: () => Boolean, description: "\u662F\u5426\u8F6F\u5220\u9664" } }, "RestoreDto": { ids: { required: true, type: () => [String], description: "\u5F85\u6062\u590D\u6570\u636E\u7684ID\u5217\u8868" } } }], [import("./modules/restful/dtos/paginate-width-trashed.dto"), { "PaginateWithTrashedDto": { trashed: { required: false, description: "\u6839\u636E\u8F6F\u5220\u9664\u72B6\u6001\u67E5\u8BE2", enum: t["./modules/database/constants"].SelectTrashMode } } }], [import("./modules/prod/dtos/get-category-prod.dto"), { "GetCategoryProdDTO": { categoryId: { required: true, type: () => String, description: "\u5206\u7C7BID" } } }], [import("./modules/prod/dtos/get-prod-page.dto"), { "GetProdPageDTO": { status: { required: true, description: "\u5206\u7C7BID", enum: t["./modules/prod/enums/prod.enum"].ProdStatus } } }], [import("./modules/prod/dtos/prod-detail-with-attr.dto"), { "ProdDetailWithAttrDTO": { prodId: { required: true, type: () => String }, prodName: { required: true, type: () => String }, oriPrice: { required: true, type: () => String, nullable: true }, price: { required: true, type: () => String, nullable: true }, costPrice: { required: true, type: () => String, nullable: true }, brief: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String, nullable: true }, imgs: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/prod/enums/prod.enum"].ProdStatus }, categoryId: { required: true, type: () => String, nullable: true }, soldNum: { required: true, type: () => Number, nullable: true }, totalStocks: { required: true, type: () => Number, nullable: true }, returnNum: { required: true, type: () => Number, nullable: true }, deliveryTemplateId: { required: true, type: () => String, nullable: true }, contentImg: { required: true, type: () => String, nullable: true }, createTime: { required: true, type: () => Date }, updateTime: { required: true, type: () => Date }, putawayTime: { required: true, type: () => Date, nullable: true }, categoryList: { required: true, type: () => [t["./modules/prod/dtos/prod-cate-desc.dto"].ProdCategoryDescDTO] }, prodCateAttrList: { required: true, type: () => [t["./modules/prod/entities/prod-cate-attr.entity"].ProdCateAttr] }, attrMap: { required: true }, attrSkuMap: { required: true } } }], [import("./modules/prod/dtos/update-prod-status.dto"), { "UpdateProdStatusDTO": { prodId: { required: true, type: () => String }, status: { required: true, type: () => Number } } }], [import("./modules/prod/dtos/update-product/attr-value-field-entry.dto"), { "AttrValueFieldEntryDTO": { attrValueId: { required: true, type: () => String }, attrValue: { required: true, type: () => String }, imgUrl: { required: true, type: () => String } } }], [import("./modules/prod/dtos/update-product/attr-list-entry.dto"), { "AttrListEntryDTO": { attrId: { required: true, type: () => String }, attrName: { required: true, type: () => String }, mainAttr: { required: true, type: () => Boolean }, attrValueFieldList: { required: true, type: () => [t["./modules/prod/dtos/update-product/attr-value-field-entry.dto"].AttrValueFieldEntryDTO] } } }], [import("./modules/prod/dtos/update-product/sku-entry.dto"), { "SkuEntryDTO": { joinAttrValueName: { required: true, type: () => String }, stock: { required: true, type: () => String }, price: { required: true, type: () => String } } }], [import("./modules/prod/dtos/update-product/update-product.dto"), { "UpdateProdDTO": { prodId: { required: true, type: () => String }, prodName: { required: true, type: () => String }, oriPrice: { required: true, type: () => String }, price: { required: true, type: () => String }, costPrice: { required: true, type: () => String, nullable: true }, brief: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String }, imgs: { required: true, type: () => String }, status: { required: true, type: () => Number }, categoryId: { required: true, type: () => String }, soldNum: { required: true, type: () => Number }, totalStocks: { required: true, type: () => Number }, returnNum: { required: true, type: () => Number }, deliveryTemplateId: { required: true, type: () => String }, contentImg: { required: true, type: () => String }, attrListData: { required: true, type: () => [t["./modules/prod/dtos/update-product/attr-list-entry.dto"].AttrListEntryDTO] }, skuList: { required: true, type: () => [t["./modules/prod/dtos/update-product/sku-entry.dto"].SkuEntryDTO] } } }], [import("./modules/prod/dtos/get-prod-comment-page.dto"), { "GetProdCommentPageDTO": { prodId: { required: true, type: () => String } } }], [import("./modules/shopcart/dtos/delete-shopcart.dto"), { "DeleteShopcartDTO": { shopcartItemIds: { required: true, type: () => [String] } } }], [import("./modules/upload/dtos/upload.dto"), { "FileUploadDto": { file: { required: true, type: () => Object } } }], [import("./modules/prod/dtos/prod-page-item.dto"), { "ProdPageItemDTO": { prodId: { required: true, type: () => String }, prodName: { required: true, type: () => String }, oriPrice: { required: true, type: () => String, nullable: true }, price: { required: true, type: () => String, nullable: true }, costPrice: { required: true, type: () => String, nullable: true }, brief: { required: true, type: () => String, nullable: true }, pic: { required: true, type: () => String, nullable: true }, imgs: { required: true, type: () => String, nullable: true }, status: { required: true, enum: t["./modules/prod/enums/prod.enum"].ProdStatus }, categoryId: { required: true, type: () => String, nullable: true }, soldNum: { required: true, type: () => Number, nullable: true }, totalStocks: { required: true, type: () => Number, nullable: true }, returnNum: { required: true, type: () => Number, nullable: true }, deliveryTemplateId: { required: true, type: () => String, nullable: true }, prodSkuSelectDTO: { required: true, type: () => t["./modules/prod/dtos/prod-sku-select.dto"].ProdSkuSelectDTO } } }], [import("./modules/shopcart/dtos/shopcart-amount.dto"), { "ShopcartAmountDTO": { totalPay: { required: true, type: () => String }, totalItemsCount: { required: true, type: () => Number } } }]], "controllers": [[import("./modules/area/controllers/area.controller"), { "AreaController": { "listByParentId": { type: [t["./modules/area/entities/area.entity"].Area] } } }], [import("./modules/area/controllers/admin/area.controller"), { "AreaController": { "listByParentId": { type: [t["./modules/area/entities/area.entity"].Area] }, "listByIds": { type: [[t["./modules/area/entities/area.entity"].Area]] } } }], [import("./modules/order/controllers/order.controller"), { "OrderController": { "orderDetail": { type: t["./modules/order/dtos/order-detail.dto"].OrderDetailDTO }, "orderPage": {}, "buynowGetCheckOut": { summary: "\u70B9\u51FB\"\u7ACB\u5373\u8D2D\u4E70\"\u6309\u94AE\u540E\uFF0C\u8BF7\u6C42\u7ED3\u7B97\u4FE1\u606F", type: t["./modules/order/dtos/checkout.dto"].CheckOutDTO }, "shopcartGetCheckOut": { summary: "\u8D2D\u7269\u8F66\u70B9\u51FB\u7ED3\u7B97\u6309\u94AE\u540E\uFF0C\u8BF7\u6C42\u7ED3\u7B97\u4FE1\u606F", type: t["./modules/order/dtos/checkout.dto"].CheckOutDTO }, "submit": { summary: "\u7ED3\u7B97\u9875\u5B8C\u6210\u786E\u8BA4\u540E\u63D0\u4EA4\u8BA2\u5355", type: String } } }], [import("./modules/order/controllers/pay.controller"), { "PayController": { "normalPay": { summary: "\u7ED3\u7B97\u9875\u5B8C\u6210\u786E\u8BA4\u540E\u63D0\u4EA4\u8BA2\u5355", type: t["./modules/order/dtos/pay-order-info.dto"].PayOrderInfoDto }, "orderFinishPay": {}, "queryPayStatus": { type: Boolean } } }], [import("./modules/order/controllers/admin/order.controller"), { "OrderController": { "orderPage": {}, "changePrice": {}, "closeOrder": {}, "sendout": {} } }], [import("./modules/order/controllers/admin/seller-addr.controller"), { "SellerAddrController": { "orderPage": { type: [t["./modules/order/entities/seller-addr.entity"].SellerAddr] }, "update": {}, "updateDefaultConsignAddr": {}, "updateDefaultReturnAddr": {} } }], [import("./modules/prod/controllers/prod-tag.controller"), { "ProdTagController": { "getTagProdList": { summary: "\u67E5\u8BE2\u67D0\u4E2A\u6807\u7B7E\u4E0B\u7684\u6240\u6709\u5546\u54C1", type: [Object] } } }], [import("./modules/prod/controllers/prod-category.controller"), { "ProdCategoryController": { "getCategoryProdList": { summary: "\u67E5\u8BE2\u6240\u6709\u5206\u7C7B\u53CA\u5176\u5546\u54C1", type: [t["./modules/prod/entities/prod-category.entity"].ProdCategory] }, "getAllCategory": { summary: "\u67E5\u8BE2\u6240\u6709\u5206\u7C7B\nTODO \u76EE\u524D\u8FD8\u662F\u5355\u5C42\u5206\u7C7B,\u4E4B\u540E\u6539\u4E3A\u591A\u7EA7\u5206\u7C7B\u6811", type: [t["./modules/prod/entities/prod-category.entity"].ProdCategory] } } }], [import("./modules/prod/controllers/prod.controller"), { "ProdController": { "getProdDetailDTOById": { summary: "\u67E5\u8BE2\u5546\u54C1\u8BE6\u60C5", type: t["./modules/prod/dtos/prod-detail.dto"].ProdDetailDTO }, "getProdPageByCategoryId": { summary: "\u67E5\u8BE2\u67D0\u5206\u7C7B\u4E0B\u7684\u5546\u54C1\u5217\u8868\nTODO \u76EE\u524D\u8FD8\u662F\u5355\u5C42\u5206\u7C7B,\u4E4B\u540E\u6539\u4E3A\u591A\u7EA7\u5206\u7C7B\u6811" }, "getSkuSelect": { summary: "\u67E5\u8BE2\u67D0\u5206\u7C7B\u4E0B\u7684\u5546\u54C1\u5217\u8868\nTODO \u76EE\u524D\u8FD8\u662F\u5355\u5C42\u5206\u7C7B,\u4E4B\u540E\u6539\u4E3A\u591A\u7EA7\u5206\u7C7B\u6811", type: t["./modules/prod/dtos/prod-sku-select.dto"].ProdSkuSelectDTO } } }], [import("./modules/prod/controllers/prod-comment.controller"), { "ProdCommentController": { "getProdCommentPage": { summary: "\u67E5\u8BE2\u67D0\u5546\u54C1\u4E0B\u7684\u8BC4\u8BBA" } } }], [import("./modules/prod/controllers/admin/prod.controller"), { "ProdController": { "getProdPageByCategoryId": { summary: "\u5206\u9875\u67E5\u8BE2\u6240\u6709\u5546\u54C1" }, "getProdDetailWithAttrDTOById": { summary: "\u67E5\u8BE2\u5546\u54C1\u8BE6\u60C5", type: t["./modules/prod/dtos/prod-detail-with-attr.dto"].ProdDetailWithAttrDTO }, "updateStatus": { summary: "\u66F4\u65B0\u5546\u54C1\u72B6\u6001" }, "updateProduct": { summary: "\u66F4\u65B0\u5546\u54C1\u72B6\u6001" } } }], [import("./modules/shopcart/controllers/shopcart-item.controller"), { "ShopcartItemController": { "getShopcartByUserId": { type: t["./modules/shopcart/dtos/get-shopcart.dto"].GetShopcartDTO }, "getShopcartProdCount": { type: Number }, "updateSku": { type: String }, "changeItem": { type: String }, "deleteItems": { type: String }, "changeItemChecked": { type: String } } }], [import("./modules/upload/controllers/upload.controller"), { "UploadController": { "upload": {} } }], [import("./modules/upload/controllers/admin/upload.controller"), { "UploadController": { "upload": {} } }], [import("./modules/user/controllers/auth.controller"), { "AuthController": { "submit": { type: t["./modules/user/dtos/token-info.dto"].TokenInfoDTO } } }], [import("./modules/user/controllers/user-addr.controller"), { "UserAddrController": { "listUserAddr": { type: [t["./modules/user/entities/user-addr.entity"].UserAddr] }, "updateUserAddr": {}, "deleteUserAddr": {}, "saveUserAddr": {}, "changeDefaultAddr": {} } }], [import("./modules/user/controllers/user.controller"), { "UserController": { "updateAvatarAndNickName": {} } }]] } };
};